

# 应用名称
spring.application.name=news
# 应用服务 WEB 访问端口
server.port=8081


spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update

#spring.datasource.url=jdbc:h2:mem:dbtest
#spring.datasource.username=sa
#spring.datasource.password=sa
#spring.datasource.driver-class-name=org.h2.Driver


#mysql
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/sell?serverTimezone=GMT%2B8&useSSL=false&allowPublicKeyRetrieval=true
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.driver-class-name =com.mysql.cj.jdbc.Driver

#durid
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.druid.min-idle=0
spring.datasource.druid.max-active=20
spring.datasource.druid.filter=stat,wall,log4j
spring.datasource.druid.filter.stat.log-slow-sql=true
spring.datasource.druid.filter.stat.slow-sql-millis=1
spring.datasource.druid.filter.stat.merge-sql=true
spring.datasource.druid.stat-view-servlet.enabled=true
spring.datasource.druid.stat-view-servlet.url-pattern=/druid/*
spring.datasource.druid.stat-view-servlet.reset-enable=true
spring.datasource.druid.stat-view-servlet.login-username=root
spring.datasource.druid.stat-view-servlet.login-password=root
spring.datasource.druid.stat-view-servlet.allow=127.0.0.1
spring.datasource.druid.stat-view-servlet.deny=192.168.1.2


##数据源类型
#spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#spring.datasource.initialSize=5
#spring.datasource.minIdle=5
#spring.datasource.tomcat.max-active=4
#spring.datasource.maxWait=60000
#sprign.datasource.timeBetweenEvictionRunsMillis=70000
#
#spring.datasource.minEvictableIdleTimeMillis=400000
#spring.datasource.validationQuery=select 1 from dual
#spring.datasource.testWhileIdle=true
#spring.datasource.testOnBorrow=false
#spring.datasource.testOnReturn=false
#
#spring.datasource.poolPreparedStatements=true
#spring.datasource.maxPoolPreparedStatementPerConnectionSize=2
#
#spring.datasource.filters=stat,wall,log4j
#
#spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
#

##数据初始化设置
#spring.datasource.schema=classpath:db/schema.sql  #进行该配置后，每次启动程序，程序都会运行resources/db/schema.sql文件，对数据库的结构进行操作。
#spring.datasource.data=classpath:db/data.sql  #进行该配置后，每次启动程序，程序都会运行resources/db/data.sql文件，对数据库的数据操作。
##h2 web console设置
#spring.datasource.platform=h2  #表明使用的数据库平台是h2
# 进行该配置后，h2 web consloe就可以在远程访问了。否则只能在本机访问。
#spring.h2.console.settings.web-allow-others=true
#spring.h2.console.path=/h2  #进行该配置，你就可以通过YOUR_URL/h2访问h2 web consloe。YOUR_URL是你程序的访问URl。
#进行该配置，程序开启时就会启动h2 web consloe。当然这是默认的，如果你不想在启动程序时启动h2 web consloe，那么就设置为false。
#spring.h2.console.enabled=true


# THYMELEAF (ThymeleafAutoConfiguration)
# 开启模板缓存（默认值： true ）
#spring.thymeleaf.cache=true
# 检查模板是否存在，然后再呈现
#spring.thymeleaf.check-template=true
# 检查模板位置是否正确（默认值 :true ）
spring.thymeleaf.check-template-location=true
#Content-Type 的值（默认值： text/html ）
spring.thymeleaf.content-type=text/html
# 开启 MVC Thymeleaf 视图解析（默认值： true ）
spring.thymeleaf.enabled=true
# 模板编码
spring.thymeleaf.encoding=UTF-8
# 要被排除在解析之外的视图名称列表，⽤逗号分隔
spring.thymeleaf.excluded-view-names=
# 要运⽤于模板之上的模板模式。另⻅ StandardTemplate-ModeHandlers( 默认值： HTML5)
spring.thymeleaf.mode=HTML5
# 在构建 URL 时添加到视图名称前的前缀（默认值： classpath:/templates/ ）
spring.thymeleaf.prefix=classpath:/templates/
# 在构建 URL 时添加到视图名称后的后缀（默认值： .html ）
spring.thymeleaf.suffix=.html

#access_log
server.tomcat.accesslog.buffered=true
server.tomcat.accesslog.enabled=true
server.tomcat.accesslog.file-date-format=yyyy-MM-dd
server.tomcat.accesslog.pattern=%h %l %t %r %b %s %D %F
server.tomcat.accesslog.prefix=access_log
server.tomcat.accesslog.rename-on-rotate=false
server.tomcat.accesslog.request-attributes-enabled=false
server.tomcat.accesslog.rotate=true
server.tomcat.accesslog.suffix=.log
server.tomcat.accesslog.directory=logs
#开发根据自己情况调整路径
server.tomcat.basedir=/data


#pattern属性值由字符串常量和pattern标识符加上前缀"%"组合而成。pattern标识符加上前缀"%"，用来代替当前请求/响应中的对应的变量值。目前支持如下的pattern：
#·        %a - 远端IP地址
#·        %A - 本地IP地址
#·        %b - 发送的字节数，不包括HTTP头，如果为0，使用"－"
#·        %B - 发送的字节数，不包括HTTP头
#·        %h - 远端主机名(如果resolveHost=false，远端的IP地址）
#·        %H - 请求协议
#·        %l - 从identd返回的远端逻辑用户名（总是返回 '-'）
#·        %m - 请求的方法（GET，POST，等）
#·        %p - 收到请求的本地端口号
#·        %q - 查询字符串(如果存在，以 '?'开始)
#·        %r - 请求的第一行，包含了请求的方法和URI
#·        %s - 响应的状态码
#·        %S - 用户的session ID
#·        %t - 日志和时间，使用通常的Log格式
#·        %u - 认证以后的远端用户（如果存在的话，否则为'-'）
#·        %U - 请求的URI路径
#·        %v - 本地服务器的名称
#·        %D - 处理请求的时间，以毫秒为单位
#·        %T - 处理请求的时间，以秒为单位
